{% set version = "0.7.0" %}

package:
  name: arrow-adbc-split
  version: {{ version }}

source:
  url: https://dist.apache.org/repos/dist/release/arrow/apache-arrow-adbc-{{ version }}/apache-arrow-adbc-{{ version }}.tar.gz
  sha256: 3e9ce03ef5edb9954b6fc845da941a1ee12eca646762190008bffc07a91fe5b0

build:
  number: 4

outputs:
  - name: libadbc-driver-manager
    script: build-cpp.sh  # [not win]
    script: build-cpp.bat  # [win]
    requirements:
      build:
        - {{ compiler('cxx') }}
        - cmake
        - ninja
      host:
      run:
    build:
      run_exports:
        - {{ pin_subpackage("libadbc-driver-manager", max_pin="x.x") }}
    test:
      commands:
        - test -f $PREFIX/include/adbc.h                                         # [unix]
        - test -f $PREFIX/include/adbc_driver_manager.h                          # [unix]
        - test -d $PREFIX/lib/cmake/AdbcDriverManager/                           # [unix]
        - test -f $PREFIX/lib/pkgconfig/adbc-driver-manager.pc                   # [unix]
        - test ! -f $PREFIX/lib/libadbc_driver_manager.a                         # [unix]
        - test -f $PREFIX/lib/libadbc_driver_manager.so.7                        # [linux]
        - test -f $PREFIX/lib/libadbc_driver_manager.7.dylib                     # [osx]

        - if not exist %LIBRARY_BIN%\adbc_driver_manager.dll exit 1              # [win]
        - if not exist %LIBRARY_INC%\adbc.h exit 1                               # [win]
        - if not exist %LIBRARY_INC%\adbc_driver_manager.h exit 1                # [win]
        - if not exist %LIBRARY_LIB%\adbc_driver_manager.lib exit 1              # [win]
        - if not exist %LIBRARY_LIB%\cmake\AdbcDriverManager exit 1              # [win]
        - if not exist %LIBRARY_LIB%\pkgconfig\adbc-driver-manager.pc exit 1     # [win]

  - name: libadbc-driver-flightsql
    script: build-cpp.sh  # [not win]
    script: build-cpp.bat  # [win]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ compiler('cgo') }}
        - cmake
        - go-cgo >=1.18
        - ninja
    build:
      run_exports:
        - {{ pin_subpackage("libadbc-driver-flightsql", max_pin="x.x") }}
      ignore_run_exports_from:
        # apache/arrow-adbc#92: cmake config shouldn't initialize C++ unless needed
        - {{ compiler('cxx') }}
    test:
      commands:
        - test ! -f $PREFIX/include/adbc.h                                       # [unix]
        - test -f $PREFIX/lib/pkgconfig/adbc-driver-flightsql.pc                 # [unix]
        - test ! -f $PREFIX/lib/libadbc_driver_flightsql.a                       # [unix]
        - test -f $PREFIX/lib/libadbc_driver_flightsql.so.7                      # [linux]
        - test -f $PREFIX/lib/libadbc_driver_flightsql.dylib                     # [osx]
        # TODO: testing exact dylib soname is fragile?
        # - test -f $PREFIX/lib/libadbc_driver_flightsql.7.dylib                 # [osx]

        - if exist %LIBRARY_INC%\adbc.h exit 1                                   # [win]
        - if not exist %LIBRARY_BIN%\adbc_driver_flightsql.dll exit 1            # [win]
        - if not exist %LIBRARY_LIB%\adbc_driver_flightsql.lib exit 1            # [win]
        - if not exist %LIBRARY_LIB%\pkgconfig\adbc-driver-flightsql.pc exit 1   # [win]

  - name: libadbc-driver-postgresql
    script: build-cpp.sh  # [not win]
    script: build-cpp.bat  # [win]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - cmake
        - ninja
        - pkg-config
      host:
        - libpq
      run:
        - libpq
    build:
      run_exports:
        - {{ pin_subpackage("libadbc-driver-postgresql", max_pin="x.x") }}
    test:
      commands:
        - test ! -f $PREFIX/include/adbc.h                                       # [unix]
        - test -d $PREFIX/lib/cmake/AdbcDriverPostgreSQL/                        # [unix]
        - test -f $PREFIX/lib/pkgconfig/adbc-driver-postgresql.pc                # [unix]
        - test ! -f $PREFIX/lib/libadbc_driver_postgresql.a                      # [unix]
        - test -f $PREFIX/lib/libadbc_driver_postgresql.so.7                     # [linux]
        - test -f $PREFIX/lib/libadbc_driver_postgresql.dylib                    # [osx]
        # TODO: testing exact dylib soname is fragile?
        # - test -f $PREFIX/lib/libadbc_driver_postgresql.7.dylib                # [osx]

        - if exist %LIBRARY_INC%\adbc.h exit 1                                   # [win]
        - if not exist %LIBRARY_BIN%\adbc_driver_postgresql.dll exit 1           # [win]
        - if not exist %LIBRARY_LIB%\adbc_driver_postgresql.lib exit 1           # [win]
        - if not exist %LIBRARY_LIB%\cmake\AdbcDriverPostgreSQL exit 1           # [win]
        - if not exist %LIBRARY_LIB%\pkgconfig\adbc-driver-postgresql.pc exit 1  # [win]

  - name: libadbc-driver-sqlite
    script: build-cpp.sh  # [not win]
    script: build-cpp.bat  # [win]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - cmake
        - ninja
        - pkg-config
      host:
        - libsqlite
      run:
        - libsqlite
    build:
      run_exports:
        - {{ pin_subpackage("libadbc-driver-sqlite", max_pin="x.x") }}
      ignore_run_exports_from:
        # apache/arrow-adbc#92: cmake config shouldn't initialize C++ unless needed
        - {{ compiler('cxx') }}
    test:
      commands:
        - test ! -f $PREFIX/include/adbc.h                                       # [unix]
        - test -d $PREFIX/lib/cmake/AdbcDriverSQLite/                            # [unix]
        - test -f $PREFIX/lib/pkgconfig/adbc-driver-sqlite.pc                    # [unix]
        - test ! -f $PREFIX/lib/libadbc_driver_sqlite.a                          # [unix]
        - test -f $PREFIX/lib/libadbc_driver_sqlite.so.7                         # [linux]
        - test -f $PREFIX/lib/libadbc_driver_sqlite.dylib                        # [osx]
        # TODO: testing exact dylib soname is fragile?
        # - test -f $PREFIX/lib/libadbc_driver_sqlite.7.dylib                    # [osx]

        - if exist %LIBRARY_INC%\adbc.h exit 1                                   # [win]
        - if not exist %LIBRARY_BIN%\adbc_driver_sqlite.dll exit 1               # [win]
        - if not exist %LIBRARY_LIB%\adbc_driver_sqlite.lib exit 1               # [win]
        - if not exist %LIBRARY_LIB%\cmake\AdbcDriverSQLite exit 1               # [win]
        - if not exist %LIBRARY_LIB%\pkgconfig\adbc-driver-sqlite.pc exit 1      # [win]

  - name: libadbc-driver-snowflake
    script: build-cpp.sh  # [not win]
    script: build-cpp.bat  # [win]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ compiler('cgo') }}
        - cmake
        - go-cgo >=1.18
        - ninja
    build:
      run_exports:
        - {{ pin_subpackage("libadbc-driver-snowflake", max_pin="x.x") }}
      ignore_run_exports_from:
        # apache/arrow-adbc#92: cmake config shouldn't initialize C++ unless needed
        - {{ compiler('cxx') }}
    test:
      commands:
        - test ! -f $PREFIX/include/adbc.h                                       # [unix]
        - test -f $PREFIX/lib/pkgconfig/adbc-driver-snowflake.pc                 # [unix]
        - test ! -f $PREFIX/lib/libadbc_driver_snowflake.a                       # [unix]
        - test -f $PREFIX/lib/libadbc_driver_snowflake.so.7                      # [linux]
        - test -f $PREFIX/lib/libadbc_driver_snowflake.dylib                     # [osx]
        # TODO: testing exact dylib soname is fragile?
        # - test -f $PREFIX/lib/libadbc_driver_snowflake.7.dylib                 # [osx]

        - if exist %LIBRARY_INC%\adbc.h exit 1                                   # [win]
        - if not exist %LIBRARY_BIN%\adbc_driver_snowflake.dll exit 1            # [win]
        - if not exist %LIBRARY_LIB%\adbc_driver_snowflake.lib exit 1            # [win]
        - if not exist %LIBRARY_LIB%\pkgconfig\adbc-driver-snowflake.pc exit 1   # [win]

  - name: adbc-driver-manager
    script: build-python.sh  # [not win]
    script: build-python.bat  # [win]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
        - cython                                 # [build_platform != target_platform]
      host:
        - cython
        - pip
        - python
        - setuptools
      run:
        - python
      run_constrained:
        - pyarrow >=8.0.0
    build:
      rpaths:
        - lib/
        - {{ SP_DIR }}/adbc_driver_manager
    test:
      commands:
        - test ! -f $SP_DIR/adbc_driver_manager/adbc.h                           # [unix]
        - test ! -f $SP_DIR/adbc_driver_manager/adbc_driver_manager.h            # [unix]
        - test ! -f $SP_DIR/adbc_driver_manager/adbc_driver_manager.cc           # [unix]
      imports:
        - adbc_driver_manager
        - adbc_driver_manager._lib

  - name: adbc-driver-flightsql
    build:
      noarch: python
      skip: true  # [build_platform != target_platform]
    script: build-python.sh  # [not win]
    script: build-python.bat  # [win]
    requirements:
      build:
        - pip
        - setuptools
      host:
        - {{ pin_subpackage('libadbc-driver-flightsql', max_pin='x.x.x', min_pin='x.x.x.x') }}
        - pip
        - python >=3.9
        - setuptools
      run:
        - {{ pin_subpackage('adbc-driver-manager') }}
        - {{ pin_subpackage('libadbc-driver-flightsql', max_pin='x.x.x', min_pin='x.x.x.x') }}
        - python >=3.9
      run_constrained:
        - pyarrow >=8.0.0
    test:
      imports:
        - adbc_driver_flightsql

  - name: adbc-driver-postgresql
    build:
      noarch: python
      skip: true  # [build_platform != target_platform]
    script: build-python.sh  # [not win]
    script: build-python.bat  # [win]
    requirements:
      build:
        - pip
        - setuptools
      host:
        - {{ pin_subpackage('libadbc-driver-postgresql', max_pin='x.x.x', min_pin='x.x.x.x') }}
        - pip
        - python >=3.9
        - setuptools
      run:
        - {{ pin_subpackage('adbc-driver-manager') }}
        - {{ pin_subpackage('libadbc-driver-postgresql', max_pin='x.x.x', min_pin='x.x.x.x') }}
        - python >=3.9
      run_constrained:
        - pyarrow >=8.0.0
    test:
      imports:
        - adbc_driver_postgresql

  - name: adbc-driver-sqlite
    build:
      noarch: python
      skip: true  # [build_platform != target_platform]
    script: build-python.sh  # [not win]
    script: build-python.bat  # [win]
    requirements:
      build:
        - pip
        - setuptools
      host:
        - {{ pin_subpackage('libadbc-driver-sqlite', max_pin='x.x.x', min_pin='x.x.x.x') }}
        - pip
        - python >=3.9
        - setuptools
      run:
        - {{ pin_subpackage('adbc-driver-manager') }}
        - {{ pin_subpackage('libadbc-driver-sqlite', max_pin='x.x.x', min_pin='x.x.x.x') }}
        - python >=3.9
      run_constrained:
        - pyarrow >=8.0.0
    test:
      imports:
        - adbc_driver_sqlite

  - name: adbc-driver-snowflake
    build:
      noarch: python
      skip: true  # [build_platform != target_platform]
    script: build-python.sh  # [not win]
    script: build-python.bat  # [win]
    requirements:
      build:
        - pip
        - setuptools
      host:
        - {{ pin_subpackage('libadbc-driver-snowflake', max_pin='x.x.x', min_pin='x.x.x.x') }}
        - pip
        - python >=3.9
        - setuptools
      run:
        - {{ pin_subpackage('adbc-driver-manager') }}
        - {{ pin_subpackage('libadbc-driver-snowflake', max_pin='x.x.x', min_pin='x.x.x.x') }}
        - python >=3.9
      run_constrained:
        - pyarrow >=8.0.0
    test:
      imports:
        - adbc_driver_snowflake

about:
  home: https://arrow.apache.org
  summary: Database access libraries for Apache Arrow
  description: |
    ADBC is an API standard for database access libraries ("drivers")
    in C and Java that uses Arrow for data. Instead of writing code
    for each individual database, applications can build against the
    ADBC APIs, and link against drivers that implement the
    standard. Additionally, a JDBC/ODBC-style driver manager is
    provided. This also implements the ADBC APIs, but dynamically
    loads drivers and dispatches calls to them.
  license: Apache-2.0
  license_family: APACHE
  license_file: LICENSE.txt
  doc_url: https://arrow.apache.org/docs/
  dev_url: https://github.com/apache/arrow-adbc

extra:
  recipe-maintainers:
    - lidavidm
